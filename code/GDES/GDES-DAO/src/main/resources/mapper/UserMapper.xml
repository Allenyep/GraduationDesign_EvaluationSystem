<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdes.GDES.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.gdes.GDES.model.User">
    <id column="id_u" jdbcType="VARCHAR" property="idU" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
  </resultMap>

  <!--<resultMap id="UserInfoMap" type="com.gdes.GDES.model.User">-->
    <!--<id column="id_u" jdbcType="VARCHAR" property="idU" />-->
    <!--<result column="username" jdbcType="VARCHAR" property="username" />-->
    <!--<result column="password" jdbcType="VARCHAR" property="password" />-->
    <!--<result column="name" jdbcType="VARCHAR" property="name" />-->
    <!--<result column="sex" jdbcType="VARCHAR" property="sex" />-->
    <!--<association javaType="com.gdes.GDES.model.Student" property="idU">-->
      <!--<id column="id_s" jdbcType="VARCHAR" property="idS" />-->
      <!--<result column="name_s" jdbcType="VARCHAR" property="nameS" />-->
      <!--<result column="id_m" jdbcType="VARCHAR" property="idM" />-->
      <!--<result column="date_s" jdbcType="VARCHAR" property="dateS" />-->
      <!--<collection property="idM" ofType="Major">-->
        <!--<id column="id_m" jdbcType="VARCHAR" property="idM" />-->
        <!--<result column="name_m" jdbcType="VARCHAR" property="nameM" />-->
        <!--<result column="leader_m" jdbcType="VARCHAR" property="leaderM" />-->
        <!--<result column="id_mb" jdbcType="INTEGER" property="idMb" />-->
      <!--</collection>-->
    <!--</association>-->

  <!--</resultMap>-->


  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id_u, username, password, name, sex
  </sql>
  <select id="selectByExample" parameterType="com.gdes.GDES.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id_u = #{idU,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where id_u = #{idU,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.gdes.GDES.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gdes.GDES.model.User">
    insert into user (id_u, username, password, 
      name, sex)
    values (#{idU,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gdes.GDES.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idU != null">
        id_u,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idU != null">
        #{idU,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gdes.GDES.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.idU != null">
        id_u = #{record.idU,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id_u = #{record.idU,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gdes.GDES.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
    </set>
    where id_u = #{idU,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gdes.GDES.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR}
    where id_u = #{idU,jdbcType=VARCHAR}
  </update>








  <!--<resultMap id="BaseResultMap" type="com.gdes.GDES.model.User">-->
    <!--<id column="id_u" jdbcType="VARCHAR" property="idU" />-->
    <!--<result column="username" jdbcType="VARCHAR" property="username" />-->
    <!--<result column="password" jdbcType="VARCHAR" property="password" />-->
    <!--<result column="name" jdbcType="VARCHAR" property="name" />-->
    <!--<result column="sex" jdbcType="VARCHAR" property="sex" />-->

  <!--</resultMap>-->


  <!--<sql id="Base_Column_List">-->
  <!--id,user_name,password-->
  <!--</sql>-->

  <!--select * from t_user where username=#{userName}-->
  <select id="selectUserByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM user where id_u=#{idU}
  </select>

  <!--select r.roleName from t_user u,t_role r where u.roleId=r.id and u.userName=#{userName}-->
  <!--SELECT r.name from t_user tu,t_role r,t_user_role ur where-->
  <!--tu.uid=ur.uid  and r.rid=ur.rid and tu.username=#{userName}-->
  <select id="selectRolesByUserName" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT  r.jsm  FROM user u,role r,userrole ur WHERE
    u.id_u=ur.id_u and r.id_r=ur.id_r and u.id_u=#{idU}
  </select>

  <!--select p.permissionName from t_user u,t_role r,t_permission p where u.roleId=r.id and p.roleId=r.id and u.userName=#{userName}-->
  <!--SELECT p.url  FROM t_user_role ur,t_permission p,t_role r,t_user u,t_role_permission rp WHERE rp.pid=p.pid-->
  <!--AND u.uid=ur.uid and rp.rid=r.rid AND rp.pid=p.pid AND u.username=#{userName}-->
  <select id="selectPermissionByUserName" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT  f.link  FROM user u,features f,role r,jsgnb j,userrole ur WHERE
    j.id_f=f.id_f AND j.id_r=r.id_r AND u.id_u=ur.id_u and u.id_u=#{idU}
  </select>






</mapper>